{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yoni\\\\Dropbox\\\\full stack beta\\\\music\\\\musix\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from \"react\";\nimport \"./Login.css\";\nimport FavoritesContext from '../../store/Favorites-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [login, setLogin] = useState(false);\n  const [loginDisplay, setLoginDisplay] = useState(\"\");\n  const userNameInput = useRef(\"\");\n  const passwordInput = useRef(\"\");\n  const favoritesCtx = useContext(FavoritesContext);\n  let tokeParsed = localStorage.getItem(\"accessToken\");\n  console.log(tokeParsed);\n  tokeParsed = JSON.parse(tokeParsed); // console.log(tokeParsed[0].accessToken);\n  // console.log(tokeParsed[1].username);\n  // console.log(tokeParsed[1]._id);\n  // console.log(tokeParsed[1]);\n  // setUserLogged(tokeParsed[1].username)\n\n  const [userLogged, setUserLogged] = useState(favoritesCtx.currentUser); // const [userLogged, setUserLogged] = useState(\"\")\n\n  function logDisplay(msg) {\n    setLoginDisplay(msg);\n    setTimeout(msg => {\n      setLoginDisplay(\"\");\n    }, 2000);\n  }\n\n  function interfaceHandler() {\n    setLogin(!login);\n    console.log(\"login\");\n  }\n\n  function logOutHandler() {\n    localStorage.setItem(\"accessToken\", JSON.stringify([{\n      accessToken: 0\n    }, {\n      username: \"Guest\"\n    }]));\n    setUserLogged(\"Guest\");\n    favoritesCtx.changeCurrentUser(\"Guest\");\n  } // function signUpHandler() {\n  //     setLogin(!login);\n  //     console.log(\"login\");\n  // }\n  // function click(e) {\n  //     console.log(e.target.value);\n  // }\n\n\n  function registerHandler() {\n    console.log(userNameInput.current, passwordInput.current.value);\n    fetch(`http://localhost:3001/users/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: userNameInput.current.value,\n        password: passwordInput.current.value\n      })\n    }).then(response => {\n      if (response.status == 401) {\n        logDisplay(\"registry failed\");\n      }\n\n      ;\n      response.json();\n    }).then(data => {\n      logDisplay(`Welcome `);\n    }); // setLogin(!login);\n  }\n\n  function loginHandler() {\n    fetch(`http://localhost:3001/users/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: userNameInput.current.value,\n        password: passwordInput.current.value\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.accessToken) {\n        localStorage.setItem(\"accessToken\", JSON.stringify(data));\n        let tokeParsed = localStorage.getItem(\"accessToken\");\n        tokeParsed = JSON.parse(tokeParsed);\n        console.log(tokeParsed[0].accessToken);\n        console.log(tokeParsed[1].username);\n        console.log(tokeParsed[1]._id);\n        favoritesCtx.changeCurrentUser(tokeParsed[1].username);\n        favoritesCtx.changeCurrentId(tokeParsed[1]._id);\n        favoritesCtx.changeCurrentToken(tokeParsed[0].accessToken);\n        setUserLogged(tokeParsed[1].username);\n      } else {\n        setLoginDisplay(\"Invalid credentials\");\n      }\n    });\n    setLogin(!login);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userLogged\",\n      children: [\"hello \", userLogged]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"credentialsInterface\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connect\",\n        onClick: interfaceHandler,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logOut\",\n        onClick: logOutHandler,\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LoginMenu\",\n      children: login ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"userNameInput\",\n          placeholder: \"user name\",\n          ref: userNameInput,\n          className: \"usernameInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"password\",\n          className: \"passwordInput\",\n          ref: passwordInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"registerAndSignIn\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register\",\n            onClick: registerHandler,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: loginHandler,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginDisplay\",\n          children: loginDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Login, \"gVPhE730NvLFov8g2/c208wn5Qc=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Yoni/Dropbox/full stack beta/music/musix/src/components/Login/Login.js"],"names":["useState","useRef","useContext","FavoritesContext","Login","login","setLogin","loginDisplay","setLoginDisplay","userNameInput","passwordInput","favoritesCtx","tokeParsed","localStorage","getItem","console","log","JSON","parse","userLogged","setUserLogged","currentUser","logDisplay","msg","setTimeout","interfaceHandler","logOutHandler","setItem","stringify","accessToken","username","changeCurrentUser","registerHandler","current","value","fetch","method","headers","body","password","then","response","status","json","data","loginHandler","_id","changeCurrentId","changeCurrentToken"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from \"react\"\r\nimport \"./Login.css\"\r\nimport FavoritesContext from '../../store/Favorites-context';\r\n\r\n\r\nfunction Login() {\r\n\r\n    const [login, setLogin] = useState(false);\r\n    const [loginDisplay, setLoginDisplay] = useState(\"\")\r\n\r\n    const userNameInput = useRef(\"\")\r\n    const passwordInput = useRef(\"\")\r\n    const favoritesCtx = useContext(FavoritesContext);\r\n\r\n    let tokeParsed = localStorage.getItem(\"accessToken\")\r\n    console.log(tokeParsed);\r\n    tokeParsed = JSON.parse(tokeParsed)\r\n    // console.log(tokeParsed[0].accessToken);\r\n    // console.log(tokeParsed[1].username);\r\n    // console.log(tokeParsed[1]._id);\r\n    // console.log(tokeParsed[1]);\r\n\r\n\r\n\r\n\r\n\r\n    // setUserLogged(tokeParsed[1].username)\r\n\r\n    const [userLogged, setUserLogged] = useState(favoritesCtx.currentUser)\r\n    // const [userLogged, setUserLogged] = useState(\"\")\r\n    function logDisplay(msg) {\r\n        setLoginDisplay(msg)\r\n        setTimeout((msg) => {\r\n            setLoginDisplay(\"\")\r\n\r\n        }, 2000);\r\n    }\r\n\r\n\r\n    function interfaceHandler() {\r\n        setLogin(!login);\r\n        console.log(\"login\");\r\n\r\n    }\r\n    function logOutHandler() {\r\n        localStorage.setItem(\"accessToken\", JSON.stringify([{ accessToken: 0 }, { username: \"Guest\" }]));\r\n        setUserLogged(\"Guest\")\r\n        favoritesCtx.changeCurrentUser(\"Guest\")\r\n    }\r\n\r\n    // function signUpHandler() {\r\n    //     setLogin(!login);\r\n    //     console.log(\"login\");\r\n\r\n    // }\r\n    // function click(e) {\r\n    //     console.log(e.target.value);\r\n\r\n    // }\r\n\r\n    function registerHandler() {\r\n        console.log(userNameInput.current, passwordInput.current.value);\r\n        fetch(`http://localhost:3001/users/register`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ username: userNameInput.current.value, password: passwordInput.current.value })\r\n        }).then((response) => { if (response.status == 401) { logDisplay(\"registry failed\") }; (response).json() }).then((data) => {\r\n            logDisplay(`Welcome `)\r\n\r\n\r\n        }\r\n\r\n\r\n        )\r\n        // setLogin(!login);\r\n\r\n\r\n    }\r\n\r\n    function loginHandler() {\r\n        fetch(`http://localhost:3001/users/login`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ username: userNameInput.current.value, password: passwordInput.current.value })\r\n        }).then((response) => (response).json()).then((data) => {\r\n\r\n\r\n\r\n            if (data.accessToken) {\r\n                localStorage.setItem(\"accessToken\", JSON.stringify(data));\r\n                let tokeParsed = localStorage.getItem(\"accessToken\")\r\n                tokeParsed = JSON.parse(tokeParsed)\r\n                console.log(tokeParsed[0].accessToken);\r\n                console.log(tokeParsed[1].username);\r\n                console.log(tokeParsed[1]._id);\r\n\r\n\r\n                favoritesCtx.changeCurrentUser(tokeParsed[1].username)\r\n                favoritesCtx.changeCurrentId(tokeParsed[1]._id)\r\n                favoritesCtx.changeCurrentToken(tokeParsed[0].accessToken)\r\n\r\n\r\n                setUserLogged(tokeParsed[1].username)\r\n            }\r\n            else {\r\n                setLoginDisplay(\"Invalid credentials\")\r\n\r\n            }\r\n        })\r\n        setLogin(!login);\r\n    }\r\n\r\n    return <>\r\n        <div className=\"userLogged\">hello {userLogged}</div>\r\n        <div className=\"credentialsInterface\">\r\n            <div className=\"connect\" onClick={interfaceHandler}>Connect</div>\r\n            <div className=\"logOut\" onClick={logOutHandler} >Log Out</div>\r\n\r\n            {/* <div className=\"signUp\" onClick={signUpHandler}>\r\n            Signup\r\n        </div> */}\r\n            {/* <div className=\"Login\" onClick={loginHandler}>\r\n            Login\r\n        </div> */}\r\n        </div>\r\n        <div className=\"LoginMenu\">\r\n            {login ? (\r\n                <>\r\n                    <input className=\"userNameInput\" placeholder={\"user name\"} ref={userNameInput} className=\"usernameInput\"></input>\r\n                    <input placeholder={\"password\"} className=\"passwordInput\"\r\n                        ref={passwordInput}></input>\r\n                    <div className=\"registerAndSignIn\">\r\n                        <div className=\"register\" onClick={registerHandler}>Register</div>\r\n                        <div onClick={loginHandler}>Sign in</div></div>\r\n                    <div className=\"loginDisplay\">{loginDisplay}</div>\r\n\r\n                </>\r\n            ) : (\r\n                <div></div>\r\n            )}\r\n        </div>\r\n\r\n\r\n    </>\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}